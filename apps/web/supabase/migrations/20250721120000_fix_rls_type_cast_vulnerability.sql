-- Fix RLS type cast vulnerability
-- This is a critical security fix to prevent potential security issues with text casting

-- Drop existing policies
DROP POLICY IF EXISTS "Anyone can view public prompts" ON prompts;
DROP POLICY IF EXISTS "Users can manage own prompts" ON prompts;

-- Recreate policies with proper UUID comparison (no text casting)
CREATE POLICY "Anyone can view public prompts" 
  ON prompts FOR SELECT 
  USING (is_public = true OR auth.uid() = user_id);

CREATE POLICY "Users can manage own prompts" 
  ON prompts FOR ALL 
  USING (auth.uid() = user_id);

-- Also check if there are any other similar issues in the search function
-- Update search_prompts function to use proper UUID comparison
CREATE OR REPLACE FUNCTION search_prompts(
  search_query TEXT DEFAULT '',
  tag_filter TEXT DEFAULT NULL,
  username_filter TEXT DEFAULT NULL,
  quick_key_filter TEXT DEFAULT NULL,
  include_private BOOLEAN DEFAULT false,
  user_id_param UUID DEFAULT NULL
)
RETURNS TABLE (
  id UUID,
  user_id UUID,
  title TEXT,
  content TEXT,
  tags TEXT[],
  quick_access_key TEXT,
  is_public BOOLEAN,
  view_count INTEGER,
  copy_count INTEGER,
  created_at TIMESTAMPTZ,
  updated_at TIMESTAMPTZ,
  username TEXT
) AS $$
BEGIN
  RETURN QUERY
  SELECT 
    p.id,
    p.user_id,
    p.title,
    p.content,
    p.tags,
    p.quick_access_key,
    p.is_public,
    p.view_count,
    p.copy_count,
    p.created_at,
    p.updated_at,
    u.username
  FROM prompts p
  JOIN users u ON p.user_id = u.id
  WHERE 
    (p.is_public = true OR (include_private AND p.user_id = user_id_param))
    AND (
      search_query = '' OR 
      p.title ILIKE '%' || search_query || '%' OR 
      p.content ILIKE '%' || search_query || '%'
    )
    AND (tag_filter IS NULL OR tag_filter = ANY(p.tags))
    AND (username_filter IS NULL OR u.username = username_filter)
    AND (quick_key_filter IS NULL OR p.quick_access_key = quick_key_filter)
  ORDER BY p.created_at DESC;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;